/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projettennis1;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import static javax.swing.text.html.HTML.Attribute.ID;


/**
 *
 * @author stagiaire
 */
public class ProjetTennis extends javax.swing.JFrame {

      private Connection conn = null;

    /**
     * Creates new form Tennis
     */

    private void initDBConnection() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", "");
            System.out.println("succes");
        } catch(SQLException  | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
    public ProjetTennis() {
        initComponents();
        initDBConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        ButtonAjouter = new javax.swing.JButton();
        ButtonEditer = new javax.swing.JButton();
        txtNom = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPrenom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSexe = new javax.swing.JTextField();
        Supprimer = new javax.swing.JButton();
        ButtonRecherche = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableauAffichageJoueur = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        LabelID = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        NomTournoi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ButoonAjouterTournoi = new javax.swing.JButton();
        ButtonEditerTournoi = new javax.swing.JButton();
        ButtonSupprimerTournoi = new javax.swing.JButton();
        ButtonRechercheTournoi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableauTournoi = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        CodeTournoi = new javax.swing.JTextField();
        LabelID2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        AnneeEpreuve = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        TypeEpreuve = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        TableauEpreuves = new javax.swing.JTable();
        ButtonRechercheEpreuve = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        ButtonRechercheVainqueur = new javax.swing.JButton();
        NomMatchs = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        PrenomMatchs = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        SexeMatchs = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableauMatchs = new javax.swing.JTable();
        ButtonRechercherFinaliste = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        ButtonAjouter.setText("Ajouter");
        ButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAjouterActionPerformed(evt);
            }
        });

        ButtonEditer.setText("Editer");
        ButtonEditer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditerActionPerformed(evt);
            }
        });

        txtNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomActionPerformed(evt);
            }
        });

        jLabel1.setText("Nom :");

        jLabel2.setText("Prenom :");

        txtPrenom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrenomActionPerformed(evt);
            }
        });

        jLabel3.setText("Sexe :");

        txtSexe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSexeActionPerformed(evt);
            }
        });

        Supprimer.setText("Supprimer");
        Supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupprimerActionPerformed(evt);
            }
        });

        ButtonRecherche.setText("Recherche");
        ButtonRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRechercheActionPerformed(evt);
            }
        });

        TableauAffichageJoueur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nom", "Prenom", "Sexe"
            }
        ));
        TableauAffichageJoueur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableauAffichageJoueurMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableauAffichageJoueur);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtNom, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                .addComponent(txtPrenom)
                                .addComponent(txtSexe)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Supprimer)
                                .addComponent(ButtonAjouter)
                                .addComponent(ButtonEditer))
                            .addGap(154, 154, 154)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(LabelID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(ButtonRecherche)
                        .addGap(155, 155, 155))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtSexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(LabelID))
                        .addGap(29, 29, 29)
                        .addComponent(ButtonAjouter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonEditer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Supprimer))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ButtonRecherche)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(400, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Joueurs", jPanel2);

        NomTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomTournoiActionPerformed(evt);
            }
        });

        jLabel5.setText("Nom :");

        ButoonAjouterTournoi.setText("Ajouter");
        ButoonAjouterTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButoonAjouterTournoiActionPerformed(evt);
            }
        });

        ButtonEditerTournoi.setText("Editer");
        ButtonEditerTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditerTournoiActionPerformed(evt);
            }
        });

        ButtonSupprimerTournoi.setText("Supprimer");
        ButtonSupprimerTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSupprimerTournoiActionPerformed(evt);
            }
        });

        ButtonRechercheTournoi.setText("Recherche");
        ButtonRechercheTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRechercheTournoiActionPerformed(evt);
            }
        });

        TableauTournoi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nom", "Code"
            }
        ));
        TableauTournoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableauTournoiMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableauTournoi);

        jLabel7.setText("Code :");

        CodeTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodeTournoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonEditerTournoi)
                            .addComponent(ButtonSupprimerTournoi)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(CodeTournoi, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ButoonAjouterTournoi)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(NomTournoi, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(LabelID2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(89, 89, 89)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(415, 415, 415)
                        .addComponent(ButtonRechercheTournoi)))
                .addContainerGap(415, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NomTournoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(CodeTournoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addComponent(ButoonAjouterTournoi)
                        .addGap(18, 18, 18)
                        .addComponent(ButtonEditerTournoi)
                        .addGap(18, 18, 18)
                        .addComponent(ButtonSupprimerTournoi))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(ButtonRechercheTournoi)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelID2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(158, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tournois", jPanel3);

        jLabel10.setText("Année Epreuve");

        jLabel11.setText("Sexe");

        TableauEpreuves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Prenom"
            }
        ));
        jScrollPane4.setViewportView(TableauEpreuves);

        ButtonRechercheEpreuve.setText("Recherche");
        ButtonRechercheEpreuve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonRechercheEpreuveMouseClicked(evt);
            }
        });
        ButtonRechercheEpreuve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRechercheEpreuveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AnneeEpreuve, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TypeEpreuve, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(126, 126, 126)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(404, 404, 404)
                        .addComponent(ButtonRechercheEpreuve)))
                .addContainerGap(430, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AnneeEpreuve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(TypeEpreuve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(ButtonRechercheEpreuve)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(160, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Epreuves", jPanel5);

        ButtonRechercheVainqueur.setText("Recherche Vainqueur");
        ButtonRechercheVainqueur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRechercheVainqueurActionPerformed(evt);
            }
        });

        NomMatchs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NomMatchsMouseClicked(evt);
            }
        });
        NomMatchs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomMatchsActionPerformed(evt);
            }
        });

        jLabel6.setText("Nom :");

        jLabel8.setText("Prenom : ");

        PrenomMatchs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrenomMatchsActionPerformed(evt);
            }
        });

        jLabel9.setText("Sexe :");

        SexeMatchs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SexeMatchsActionPerformed(evt);
            }
        });

        TableauMatchs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nom", "Prenom", "Sexe"
            }
        ));
        jScrollPane3.setViewportView(TableauMatchs);

        ButtonRechercherFinaliste.setText("Recherche Finaliste");
        ButtonRechercherFinaliste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRechercherFinalisteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(NomMatchs, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PrenomMatchs, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SexeMatchs, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(166, 166, 166)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(ButtonRechercheVainqueur)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonRechercherFinaliste))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(415, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonRechercheVainqueur)
                    .addComponent(ButtonRechercherFinaliste))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NomMatchs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(PrenomMatchs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(SexeMatchs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(189, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Matchs", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAjouterActionPerformed
        try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", "");
         String sql = "insert into joueur(Nom,Prenom,Sexe)values(?,?,?)";
         PreparedStatement pst = conn.prepareStatement(sql);
        
          // Vérifier si le sexe entré est valide
    String sexe = txtSexe.getText();
    String nom = txtNom.getText();
    String prenom = txtPrenom.getText();
    if (sexe.isEmpty() || prenom.isEmpty() || nom.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs");
        return; // Sortir de la méthode si un champ est vide
    } else if (!sexe.equals("H") && !sexe.equals("F")) { 
        JOptionPane.showMessageDialog(null, "Le sexe doit être 'H' ou 'F'");
        return; // Sortir de la méthode si le sexe est invalide
    } else {
        pst.setString(1,nom);
        pst.setString(2,prenom);
        pst.setString(3,sexe);
        JOptionPane.showMessageDialog(null, "Le joueur a bien été ajouté, appuyer sur le bouton recherche pour le voir");
    }
          
        pst.execute();
        conn.close();
            
        } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"erreur");
        }
    }//GEN-LAST:event_ButtonAjouterActionPerformed

    private void ButtonEditerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditerActionPerformed
    try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", "");
         String sql = "UPDATE joueur SET Nom=?, Prenom=?, Sexe=? WHERE ID=?";
         PreparedStatement pst = conn.prepareStatement(sql);
         
    String sexe = txtSexe.getText();
    String nom = txtNom.getText();
    String prenom = txtPrenom.getText();
    int id = Integer.parseInt(LabelID.getText());
         
        pst.setString(1,nom);
        pst.setString(2,prenom);
        pst.setString(3,sexe);
        pst.setInt(4, id);
        pst.execute();
        JOptionPane.showMessageDialog(null, "Le joueur a bien été modifier");
         
         
           } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"erreur");
        }

    }//GEN-LAST:event_ButtonEditerActionPerformed

    private void txtNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomActionPerformed

    private void txtPrenomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrenomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrenomActionPerformed

    private void txtSexeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSexeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSexeActionPerformed

    private void SupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupprimerActionPerformed
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", ""); 
            String sql = "DELETE FROM JOUEUR WHERE NOM = ? AND PRENOM = ? AND SEXE = ?";
   
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1,txtNom.getText());
            pst.setString(2,txtPrenom.getText());
            pst.setString(3,txtSexe.getText());
            JOptionPane.showMessageDialog(null, "Le joueur a bien été supprimer");
          
            pst.execute();
            conn.close();   
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"erreur");
        }
    }//GEN-LAST:event_SupprimerActionPerformed

    private void ButtonRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRechercheActionPerformed
     try {
    DefaultTableModel Model = (DefaultTableModel) TableauAffichageJoueur.getModel();
    for(int i = Model.getRowCount(); i > 0; --i){
        Model.removeRow(i-1);
    }
    Class.forName("com.mysql.cj.jdbc.Driver");
    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", ""); 
    String sql = "SELECT ID, NOM, PRENOM, SEXE FROM JOUEUR WHERE (NOM LIKE '%"+txtNom.getText()+"%' AND PRENOM LIKE '%"+txtPrenom.getText()+"%') OR SEXE = '"+txtSexe.getText()+"'";
    PreparedStatement pst = conn.prepareStatement(sql);
    ResultSet rs = pst.executeQuery();
    while(rs.next()){
        String id = rs.getString("ID");
        String nom = rs.getString("Nom");
        String prenom = rs.getString("Prenom");
        String sexe = rs.getString("sexe");
        Model.insertRow(Model.getRowCount(),new Object[]{id, nom, prenom, sexe});
    }   
} catch (Exception e) {
    JOptionPane.showMessageDialog(null,"erreur");
}

    }//GEN-LAST:event_ButtonRechercheActionPerformed

    private void TableauAffichageJoueurMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableauAffichageJoueurMouseClicked
       
              DefaultTableModel Model = (DefaultTableModel) TableauAffichageJoueur.getModel();
              String nom = Model.getValueAt(TableauAffichageJoueur.getSelectedRow(),1).toString();
              String prenom = Model.getValueAt(TableauAffichageJoueur.getSelectedRow(),2).toString();
              String sexe = Model.getValueAt(TableauAffichageJoueur.getSelectedRow(),3).toString();
              String id =Model.getValueAt(TableauAffichageJoueur.getSelectedRow(),0).toString();
              txtNom.setText(nom);
              txtPrenom.setText(prenom);
              txtSexe.setText(sexe);
              LabelID.setText(id);
              
              
    }//GEN-LAST:event_TableauAffichageJoueurMouseClicked

    private void NomTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomTournoiActionPerformed
        
    }//GEN-LAST:event_NomTournoiActionPerformed

    private void ButtonEditerTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditerTournoiActionPerformed
          try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", "");
         String sql = "UPDATE TOURNOI SET NOM=?, CODE=? WHERE ID=?";
         PreparedStatement pst = conn.prepareStatement(sql);
         
            String nom = NomTournoi.getText();
            String code = CodeTournoi.getText();
            int id = Integer.parseInt(LabelID2.getText());
    
            pst.setString(1, nom);
            pst.setString(2, code);
            pst.setInt(3, id);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Le tournoi a bien été modifier");
        
           } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"erreur");
        }
    }//GEN-LAST:event_ButtonEditerTournoiActionPerformed

    private void ButoonAjouterTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButoonAjouterTournoiActionPerformed
         try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", "");
         String sql = "INSERT INTO TOURNOI (NOM,CODE) VALUES (?,?)";
         PreparedStatement pst = conn.prepareStatement(sql);
         
           String NOM = NomTournoi.getText();
           String CODE = CodeTournoi.getText();
           pst.setString(1,NOM);
           pst.setString(2,CODE);
           pst.execute();
           
          } catch (Exception e) { 
                JOptionPane.showMessageDialog(null,"erreur");
        }
    }//GEN-LAST:event_ButoonAjouterTournoiActionPerformed

    private void ButtonRechercheTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRechercheTournoiActionPerformed
       try {
    DefaultTableModel model = (DefaultTableModel) TableauTournoi.getModel();
    // Supprimer toutes les lignes du tableau existant
    for(int i = model.getRowCount(); i > 0; --i){
        model.removeRow(i-1);
    }
    // Se connecter à la base de données
    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", ""); 
    // Requête SQL pour sélectionner les joueurs
    String sql = "SELECT ID, NOM, CODE FROM tournoi WHERE (NOM LIKE '%"+NomTournoi.getText()+"%') AND (CODE LIKE '%"+CodeTournoi.getText()+"%')";
    PreparedStatement pst = conn.prepareStatement(sql);
    ResultSet rs = pst.executeQuery();
    while(rs.next()){
        String id = rs.getString("ID");
        String nom = rs.getString("Nom");
        String code = rs.getString("Code");
        model.insertRow(model.getRowCount(),new Object[]{id, nom, code});
       
    }   
} catch (Exception e) {
    JOptionPane.showMessageDialog(null,"erreur");
}

    }//GEN-LAST:event_ButtonRechercheTournoiActionPerformed

    private void CodeTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodeTournoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodeTournoiActionPerformed

    private void ButtonSupprimerTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSupprimerTournoiActionPerformed
                try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", ""); 
            String sql = "DELETE FROM TOURNOI WHERE NOM = ? AND CODE = ?";
   
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1,NomTournoi.getText());
            pst.setString(2,CodeTournoi.getText());
            JOptionPane.showMessageDialog(null, "Le tournoi a bien été supprime");
            pst.execute();
            conn.close();   
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"erreur");
        }
    }//GEN-LAST:event_ButtonSupprimerTournoiActionPerformed

    private void TableauTournoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableauTournoiMouseClicked
          DefaultTableModel Model = (DefaultTableModel) TableauTournoi.getModel();
          
              String nom = Model.getValueAt(TableauTournoi.getSelectedRow(),1).toString();
              String code = Model.getValueAt(TableauTournoi.getSelectedRow(),2).toString();
              String id =Model.getValueAt(TableauTournoi.getSelectedRow(),0).toString();
              NomTournoi.setText(nom);
              CodeTournoi.setText(code);
              LabelID2.setText(id);
    }//GEN-LAST:event_TableauTournoiMouseClicked

    private void ButtonRechercheVainqueurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRechercheVainqueurActionPerformed
      try {
    DefaultTableModel model = (DefaultTableModel) TableauMatchs.getModel();
   
    for(int i = model.getRowCount() - 1; i >= 0; i--){
    model.removeRow(i);
}
    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", ""); 
    String sql = "SELECT Distinct NOM, PRENOM, SEXE FROM match_tennis inner join joueur on joueur.id= match_tennis.id_vainqueur  WHERE (NOM LIKE ?) AND (Prenom LIKE ?) AND (SEXE LIKE ?)";
    
  
    PreparedStatement pst = conn.prepareStatement(sql);
    pst.setString(1, "%" + NomMatchs.getText() + "%");
    pst.setString(2, "%" + PrenomMatchs.getText() + "%");
    pst.setString(3, "%" + SexeMatchs.getText() + "%");
    ResultSet rs = pst.executeQuery();
    while (rs.next()) {
        String nom = rs.getString("NOM");
        String prenom = rs.getString("PRENOM");
        String sexe = rs.getString("SEXE");
        model.addRow(new Object[]{nom, prenom, sexe});
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Erreur : " + e.getMessage());
}

    }//GEN-LAST:event_ButtonRechercheVainqueurActionPerformed

    private void NomMatchsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomMatchsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomMatchsActionPerformed

    private void SexeMatchsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SexeMatchsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SexeMatchsActionPerformed

    private void PrenomMatchsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrenomMatchsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrenomMatchsActionPerformed

    private void NomMatchsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NomMatchsMouseClicked
       
              DefaultTableModel Model = (DefaultTableModel) TableauMatchs.getModel();
              String nom = Model.getValueAt(TableauMatchs.getSelectedRow(),1).toString();
              String prenom = Model.getValueAt(TableauMatchs.getSelectedRow(),2).toString();
              String sexe = Model.getValueAt(TableauMatchs.getSelectedRow(),3).toString();
              NomMatchs.setText(nom);
              PrenomMatchs.setText(prenom);
              SexeMatchs.setText(sexe);
              
    }//GEN-LAST:event_NomMatchsMouseClicked

    private void ButtonRechercherFinalisteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRechercherFinalisteActionPerformed
         try {
    DefaultTableModel model = (DefaultTableModel) TableauMatchs.getModel();
   
    for(int i = model.getRowCount() - 1; i >= 0; i--){
    model.removeRow(i);
}
    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", ""); 
    String sql = "SELECT Distinct NOM, PRENOM, SEXE FROM match_tennis inner join joueur on joueur.id =match_tennis.id_finaliste WHERE (NOM LIKE ?) AND (Prenom LIKE ?) AND (SEXE LIKE ?)";
    
  
    PreparedStatement pst = conn.prepareStatement(sql);
    pst.setString(1, "%" + NomMatchs.getText() + "%");
    pst.setString(2, "%" + PrenomMatchs.getText() + "%");
    pst.setString(3, "%" + SexeMatchs.getText() + "%");
    ResultSet rs = pst.executeQuery();
    while (rs.next()) {
        String nom = rs.getString("NOM");
        String prenom = rs.getString("PRENOM");
        String sexe = rs.getString("SEXE");
        model.addRow(new Object[]{nom, prenom, sexe});
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Erreur : " + e.getMessage());
}
    }//GEN-LAST:event_ButtonRechercherFinalisteActionPerformed

    private void ButtonRechercheEpreuveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRechercheEpreuveActionPerformed
 try {
    DefaultTableModel model = (DefaultTableModel) TableauEpreuves.getModel();
    model.setRowCount(0);
    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris", "root", "");
    String sql = "SELECT DISTINCT JOUEUR.NOM, JOUEUR.PRENOM FROM JOUEUR INNER JOIN MATCH_TENNIS ON JOUEUR.ID = MATCH_TENNIS.ID_VAINQUEUR OR JOUEUR.ID = MATCH_TENNIS.ID_FINALISTE INNER JOIN EPREUVE ON EPREUVE.ID = MATCH_TENNIS.ID_EPREUVE WHERE EPREUVE.ANNEE = ? AND EPREUVE.TYPE_EPREUVE = ? ORDER BY JOUEUR.NOM " ;
    PreparedStatement pst = conn.prepareStatement(sql);
    pst.setString(1, AnneeEpreuve.getText());
    pst.setString(2, TypeEpreuve.getText());
    ResultSet rs = pst.executeQuery();
    while (rs.next()) {
        String nom = rs.getString(1);
        String prenom = rs.getString(2);
        model.addRow(new Object[]{nom, prenom});
    }
    conn.close();
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Erreur : " + e.getMessage());
}

    }//GEN-LAST:event_ButtonRechercheEpreuveActionPerformed

    private void ButtonRechercheEpreuveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonRechercheEpreuveMouseClicked
         DefaultTableModel Model = (DefaultTableModel) TableauEpreuves.getModel();
              String nom = Model.getValueAt(TableauEpreuves.getSelectedRow(),1).toString();
              String prenom = Model.getValueAt(TableauEpreuves.getSelectedRow(),2).toString();
              AnneeEpreuve.setText(nom);
              TypeEpreuve.setText(prenom);
    }//GEN-LAST:event_ButtonRechercheEpreuveMouseClicked
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjetTennis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjetTennis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjetTennis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjetTennis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjetTennis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AnneeEpreuve;
    private javax.swing.JButton ButoonAjouterTournoi;
    private javax.swing.JButton ButtonAjouter;
    private javax.swing.JButton ButtonEditer;
    private javax.swing.JButton ButtonEditerTournoi;
    private javax.swing.JButton ButtonRecherche;
    private javax.swing.JButton ButtonRechercheEpreuve;
    private javax.swing.JButton ButtonRechercheTournoi;
    private javax.swing.JButton ButtonRechercheVainqueur;
    private javax.swing.JButton ButtonRechercherFinaliste;
    private javax.swing.JButton ButtonSupprimerTournoi;
    private javax.swing.JTextField CodeTournoi;
    private javax.swing.JLabel LabelID;
    private javax.swing.JLabel LabelID2;
    private javax.swing.JTextField NomMatchs;
    private javax.swing.JTextField NomTournoi;
    private javax.swing.JTextField PrenomMatchs;
    private javax.swing.JTextField SexeMatchs;
    private javax.swing.JButton Supprimer;
    private javax.swing.JTable TableauAffichageJoueur;
    private javax.swing.JTable TableauEpreuves;
    private javax.swing.JTable TableauMatchs;
    private javax.swing.JTable TableauTournoi;
    private javax.swing.JTextField TypeEpreuve;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtPrenom;
    private javax.swing.JTextField txtSexe;
    // End of variables declaration//GEN-END:variables
}
